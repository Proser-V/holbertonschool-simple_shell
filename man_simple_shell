.TH SIMPLESHELL 1 "April 2025" "Version 1.0" "User Manual"

.SH NAME
simpleshell \- a minimalist Unix command-line interpreter written in C.

.SH SYNOPSIS
.B simpleshell
.RI [file]

.SH DESCRIPTION
.B simpleshell
is a basic shell that reads commands from standard input or a file and executes them using the Unix system.

Features include:

.TP
\- Execution of commands with or without arguments.
.TP
\- Support for absolute and relative paths.
.TP
\- Environment variable handling (e.g. PATH).
.TP
\- Built-in commands:
.BR exit ,
.BR env.

.SH OPTIONS
This shell does not accept command-line options. If a file is provided as an argument, the shell reads commands from the file instead of standard input.

.SH BUILT-IN COMMANDS
.TP
.B exit
Exit the shell with the specified status (default is 0).
.TP
.B env
Print the current environment.

.SH FUNCTIONING
The following table summarizes the internal workflow of the shell:

.TS
box, tab(:);
c | l.
Step : Description
_
1 : Display the prompt (in interactive mode)
2 : Read user input using getline
3 : Tokenize the input line using strtok
4 : Search for the executable using PATH directories
5 : Create a child process using fork()
6 : Execute the command with execve()
7 : Wait for the child process to finish using wait()
.TE

.SH EXAMPLES
.TP
Run the shell in interactive mode:
.EX
$ ./simpleshell
$
.EE

.TP
Execute a simple command:
.EX
$ ls -l
(total output from 'ls -l')
.EE

.TP
Use a built-in command:
.EX
$ env
(PATH and other environment variables printed)
.EE

.TP
Exit the shell with a specific status:
.EX
$ exit 2
.EE

.TP
Run shell in non-interactive mode with a file:
.EX
$ ./simpleshell commands.txt
.EE

Where `commands.txt` contains:
.EX
ls
pwd
exit
.EE

.SH FILES
No configuration files are used. The shell is fully self-contained.

.SH AUTHORS
Developed by [YOUR NAME] as part of the Holberton program.

.SH SEE ALSO
.BR sh (1),
.BR bash (1),
.BR execve (2),
.BR fork (2),
.BR wait (2),
.BR getenv (3),
.BR strtok (3)
